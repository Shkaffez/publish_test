{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToProps","state","isAuth","auth","DialogItem","props","path","id","className","style","dialog","avatar","alt","src","to","name","Message","messege","message","Dialogs","dialogsElements","dialogs","map","element","messagesElements","messages","dialogsItems","messeges","onSubmit","values","addMessage","textArea","compose","connect","dialogsPage","newMessageText","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,+HCG9MC,EAAkB,SAACC,GAAD,MAAY,CAAEC,OAAQD,EAAME,KAAKD,S,yCCa1CE,EAbI,SAACC,GAElB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAEE,sBAAKC,UAAWC,IAAMC,OAAtB,UACE,qBAAKF,UAAWC,IAAME,OAAQC,IAAI,GAAGC,IAAI,0GACzC,cAAC,IAAD,CAASC,GAAIR,EAAb,SAAoBD,EAAMU,WCDjBC,EALC,SAACX,GACf,OAAO,qBAAKG,UAAWC,IAAMQ,QAAtB,SAAgCZ,EAAMa,WCmChCC,EAhCC,SAACd,GAEf,IAAIe,EAAkBf,EAAMgB,QAAQC,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAAYR,KAAMQ,EAAQR,KAAMR,GAAIgB,EAAQhB,IACVgB,EAAQhB,OACzFiB,EAAmBnB,EAAMoB,SAASH,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAASL,QAASK,EAAQL,QAASX,GAAIgB,EAAQhB,IACXgB,EAAQhB,OAYjG,OAAIF,EAAMH,OAGR,sBAAKM,UAAWC,IAAMY,QAAtB,UACE,qBAAKb,UAAWC,IAAMiB,aAAtB,SACGN,IAEH,sBAAKZ,UAAWC,IAAMkB,SAAtB,UACGH,EACD,cAAC,IAAD,CAAWI,SAbG,SAACC,GACnBxB,EAAMyB,WAAWD,EAAOE,mBAGD,cAAC,IAAD,CAAUjB,GAAI,YCJ1BkB,sBACbC,aAjBsB,SAAChC,GACvB,MAAO,CACPoB,QAASpB,EAAMiC,YAAYb,QAC3BI,SAAUxB,EAAMiC,YAAYT,SAC5BU,eAAgBlC,EAAMiC,YAAYC,mBAKT,SAACC,GAC1B,MAAO,CACLN,WAAY,SAACZ,GAAD,OAAakB,EAASC,YAAwBnB,UJZ9B,SAACoB,GAAe,IAEtCC,EAFqC,uKAInC,OAAIC,KAAKnC,MAAMH,OAER,cAACoC,EAAD,eAAeE,KAAKnC,QAFG,cAAC,IAAD,CAAUS,GAAG,eAJR,GAEX2B,IAAMH,WAWtC,OAFqCL,YAAQjC,EAARiC,CAAyBM,KIMnDP,CAGbb","file":"static/js/3.26dda714.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2PMRC\",\"dialogsItems\":\"Dialogs_dialogsItems__rAMff\",\"dialog\":\"Dialogs_dialog__2Lt_a\",\"messeges\":\"Dialogs_messeges__3QRqW\",\"messege\":\"Dialogs_messege__2vRy-\",\"avatar\":\"Dialogs_avatar__1spER\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst mapStateToProps = (state) => ({ isAuth: state.auth.isAuth });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n        \r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n     \r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n\r\n    <div className={style.dialog}>      \r\n      <img className={style.avatar} alt=\"\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_zHnsoD29FF3uZIXlcdhTNGrM7jAEzNuaEg&usqp=CAU\"></img>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n  return <div className={style.messege}>{props.message}</div>;\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { InputForm } from '../common/inputForm';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport style from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let dialogsElements = props.dialogs.map(element => <DialogItem name={element.name} id={element.id}\r\n                                                                                  key={element.id} />);\r\n  let messagesElements = props.messages.map(element => <Message message={element.message} id={element.id}\r\n                                                                                      key={element.id}  />)\r\n\r\n  \r\n\r\n  \r\n\r\n \r\n\r\n  let addNewMessage = (values) => {\r\n    props.addMessage(values.textArea);    \r\n  }\r\n\r\n  if(!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={style.messeges}>\r\n        {messagesElements}\r\n        <InputForm onSubmit={addNewMessage} />        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { addMessageActionCreator } from '../Redux/DialogsPage_Reduser';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  dialogs: state.dialogsPage.dialogs,\r\n  messages: state.dialogsPage.messages,\r\n  newMessageText: state.dialogsPage.newMessageText,\r\n  \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (message) => dispatch(addMessageActionCreator(message)),\r\n    \r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}