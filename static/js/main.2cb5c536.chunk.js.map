{"version":3,"sources":["components/NavBar/NavBar.module.css","components/Redux/Auth_Reduser.js","components/SideBar/Friends.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/paginator.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/common/inputForm.js","components/Redux/DialogsPage_Reduser.js","components/Profile/MyPosts/Post/Post.module.css","api/api.js","reportWebVitals.js","components/Redux/App_Reduser.js","components/NavBar/NavBar.jsx","assets/images/Spinner-1s-200px.svg","components/common/Preloader.jsx","components/SideBar/FriendLink.js","components/SideBar/Friends.js","components/SideBar/FriendsContainer.js","utils/object-helpers.js","components/Redux/Users_Reduser.js","components/common/paginator.jsx","assets/images/user.jpg","components/Users/User.jsx","components/Users/Users.jsx","components/Redux/Users_selectors.js","components/Users/UsersContainer.jsx","components/Redux/PostsPage_Reduser.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","assets/images/Blue-style.jpg","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","components/Redux/SideBar_Reduser.js","components/Redux/ReduxStore.js","index.js"],"names":["module","exports","SET_AUTH_USER_DATA","SET_LOGIN_ERROR","setAuthUserData","userId","email","login","isAuth","loginError","type","payload","initialState","undefined","authentication","dispatch","a","authAPI","authMe","data","resultCode","id","password","rememberMe","message","messages","length","logout","authReduser","state","action","InputForm","props","onSubmit","render","handleSubmit","reset","name","component","ADD_MESSAGE","addMessageActionCreator","dialogs","dialogsReduser","parseInt","instance","axios","create","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","follow","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIALIZED_SUCCSESS","isInitialized","appReduser","NavBar","className","style","nav","item","to","activeClassName","activeLink","href","Preloader","src","preloader","alt","FriendLink","wrapper","avatarSrc","Friends","friendsElements","friendLink","map","friend","friends","friendLinks","FriendsContainer","connect","sideBar","updateObjectInArray","items","itemId","objPropName","newObjProps","i","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROGRESS","followSuccess","unfollowSuccess","setUser","users","toggleIsFetching","isFetching","toggleFollowingInPropress","totalItemsCount","followingInProgress","portionSize","followUnfollowFlow","apiMethod","actionCreator","usersReduser","followed","totalCount","pageNumper","filter","Paginator","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginatorContainer","onClick","p","selected","e","onPageChanged","toString","User","user","usersContainer","photos","small","userPhoto","userAvatar","disabled","some","Users","u","usersPage","getPageSize","gettotalItemsCount","getCurrentPage","getIsFetching","getFollowingInProgress","getPortionSize","UsersContainer","setCurrentPage","requesUsers","this","React","Component","bind","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","setStatus","posts","userProfile","postsReduser","postText","newPostText","newText","Post","MyPosts","memo","postsElements","myPosts","values","addPost","textArea","MyPostsContainer","postsPage","ProfileStatus","editMod","setEditMod","useEffect","onChange","currentTarget","value","autoFocus","onBlur","onDoubleClick","ProfileInfo","profile__img","Blue_style","profileWrapper","fullName","ProfileStatusWithHooks","lookingForAJob","contacs","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","Profile","ProfileContainer","match","params","history","getUserProfile","requesUserstatus","compose","auth","withRouter","Header","header","login_block","HeaderContainer","Login","lazy","DialogsContainer","App","initializeApp","path","fallback","app","sideBarReduser","redusers","combineReducers","dialogsPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","StrictMode","document","getElementById","getState"],"mappings":"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","file":"static/js/main.2cb5c536.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1FfAl\",\"item\":\"NavBar_item__36rjC\",\"activeLink\":\"NavBar_activeLink__1I_yQ\"};","import { authAPI } from \"../../api/api\";\r\n\r\n\r\nconst SET_AUTH_USER_DATA = 'samurai-network/auth/SET_AUTH_USER_DATA';\r\nconst SET_LOGIN_ERROR = 'samurai-network/auth/SET_LOGIN_ERROR';\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth, loginError) => ({\r\n  type: SET_AUTH_USER_DATA,\r\n  payload: { userId, email, login, isAuth, loginError }\r\n});\r\nexport const setLoginError = (loginError) => ({ type: SET_LOGIN_ERROR, loginError })\r\n\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  loginError: undefined\r\n\r\n}\r\n\r\nconst authReduser = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SET_AUTH_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case SET_LOGIN_ERROR:\r\n\r\n      return {\r\n        ...state,\r\n        loginError: action.loginError\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const authentication = () => async (dispatch) => {\r\n  let data = await authAPI.authMe();\r\n  if (data.resultCode === 0) {\r\n    let { id, email, login } = data.data;\r\n    dispatch(setAuthUserData(id, email, login, true, undefined));\r\n  }\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let data = await authAPI.login(email, password, rememberMe);\r\n  if (data.resultCode === 0) {\r\n    dispatch(authentication());\r\n  }\r\n  else {\r\n    let message = data.messages.length > 0 ? data.messages[0] : \"login error\";\r\n\r\n    dispatch(setLoginError(message));\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let data = await authAPI.logout()\r\n  if (data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false, undefined));\r\n  }\r\n}\r\n\r\n\r\nexport default authReduser;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__Xng1T\",\"friendLinks\":\"Friends_friendLinks__3j5Pw\",\"wrapper\":\"Friends_wrapper__h3nPs\",\"name\":\"Friends_name__11T80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__img\":\"ProfileInfo_profile__img__3RJKs\",\"item\":\"ProfileInfo_item__2Ijtq\",\"userAvatar\":\"ProfileInfo_userAvatar__31AhW\",\"profileWrapper\":\"ProfileInfo_profileWrapper__3US6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userAvatar\":\"paginator_userAvatar__hvvdF\",\"selected\":\"paginator_selected__2c7kq\",\"paginatorContainer\":\"paginator_paginatorContainer__34ndB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userAvatar\":\"Users_userAvatar__2Pkbu\",\"selected\":\"Users_selected__StRz-\",\"usersContainer\":\"Users_usersContainer__1rhp1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3CviU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2pmSh\",\"login_block\":\"Header_login_block__1S-g7\"};","import React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\n\r\n\r\nexport const InputForm = (props) => {\r\n    return (\r\n        <Form \r\n            onSubmit={props.onSubmit}\r\n            render={({ handleSubmit, reset }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field name=\"textArea\" component=\"textarea\" type=\"text\"/>\r\n                    </div>\r\n                    <button>submit</button>\r\n                </form>\r\n            )}\r\n\r\n        />\r\n    )\r\n}","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\n\r\nexport const addMessageActionCreator = (message) => ({type: 'ADD-MESSAGE', message});\r\n\r\n\r\nlet initialState = {  \r\n    dialogs: [\r\n      { id: 1, name: \"Ivan\" },\r\n      { id: 2, name: \"Zlata\" },\r\n      { id: 3, name: \"Den\" },\r\n      { id: 4, name: \"Foksi\" },\r\n      { id: 5, name: \"Taldom\" }\r\n    ],\r\n    messages: [\r\n      { id: 1, message: \"Hi\" },\r\n      { id: 2, message: \"How are you?\" },\r\n      { id: 3, message: \"I'm fine\" }\r\n    ],\r\n    \r\n}\r\n\r\nconst dialogsReduser = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case ADD_MESSAGE: \r\n    debugger;\r\n        let message = {\r\n          \r\n          id: parseInt(state.messages[state.messages.length - 1].id + 1),\r\n          message: action.message\r\n        }        \r\n        return {\r\n          ...state,\r\n          messages: [...state.messages, message],          \r\n        } \r\n      default:\r\n        return state;\r\n      }\r\n}\r\n\r\nexport default dialogsReduser;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3wN0-\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"dca62038-4b8e-42fe-a354-95d74ec414b1\"\r\n    },\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage, pageSize) {\r\n        return instance.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`,\r\n            { withCredentials: true }).then(response => response.data);\r\n    },\r\n\r\n    follow (id) {\r\n        return instance.post(`follow/${id}`).then(response => response.data);\r\n    },\r\n\r\n    unfollow (id) {\r\n        return instance.delete(`follow/${id}`).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe () {        \r\n        return instance.get('auth/me').then(response => response.data);\r\n    }, \r\n\r\n    login (email, password, rememberMe = false) {        \r\n        return instance.post('/auth/login',  { email, password, rememberMe }).then(response => response.data);\r\n    },\r\n\r\n    logout () {        \r\n        return instance.delete('/auth/login').then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return instance.get('profile/' + userId).then(response => response.data);\r\n    },\r\n\r\n    getStatus (userId) {\r\n        return instance.get('profile/status/' + userId).then(response => response.data);\r\n    },\r\n\r\n    updateStatus (status) {\r\n        return instance.put('profile/status/', { status: status }).then(response => response.data);\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport { authentication } from \"./Auth_Reduser\";\r\n\r\n\r\nconst INITIALIZED_SUCCSESS = 'INITIALIZED_SUCCSESS';\r\n\r\n\r\n\r\nexport const initializedSuccsess = () => ({ type: INITIALIZED_SUCCSESS });\r\n\r\n\r\nlet initialState = {\r\n  isInitialized: false,\r\n}\r\n\r\nconst appReduser = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCSESS:\r\n      return {\r\n        ...state,\r\n        isInitialized: true        \r\n      }      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise =  dispatch(authentication());\r\n\r\n    promise.then(() => {\r\n      dispatch(initializedSuccsess());\r\n    });\r\n}\r\n\r\n\r\n\r\nexport default appReduser;\r\n\r\n","import React from 'react';\r\nimport style from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n    <nav className={style.nav}>\r\n      <div className={style.item}>\r\n        <NavLink to=\"/profile\" activeClassName={style.activeLink}>Profile</NavLink>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>Messages</NavLink>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <NavLink to=\"/users\" activeClassName={style.activeLink}>Users</NavLink>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <NavLink to=\"/login\" activeClassName={style.activeLink}>Login</NavLink>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <a href=\"#\">News</a>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <a href=\"#\">Music</a>\r\n      </div>\r\n\r\n      <div className={style.item}>\r\n        <a href=\"#\">Settings</a>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.7bf174a8.svg\";","import React from 'react';\r\nimport preloader from '../../assets/images/Spinner-1s-200px.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n\r\n        <div>\r\n            <img src={preloader} alt=\"preloader\" />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport style from './Friends.module.css';\r\n\r\nconst FriendLink = (props) => {\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <img src={props.avatarSrc} alt=\"ava\"/>\r\n            <div className={style.name}>{props.name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendLink;\r\n\r\n","import React from 'react';\r\nimport FriendLink from './FriendLink';\r\nimport style from './Friends.module.css'\r\n\r\nconst Friends = (props) => {\r\n    \r\n    let friendsElements = props.friendLink.map(friend => <FriendLink avatarSrc={friend.avatarSrc} \r\n                                                                     name={friend.name} key={friend.id}/>);\r\n\r\n    return (\r\n        <div className={style.friends}>\r\n            <h3>Friends</h3>\r\n            <div className={style.friendLinks}>\r\n            {friendsElements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;\r\n","import { connect } from 'react-redux';\r\nimport Friends from './Friends';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friendLink: state.sideBar.friendLink,       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {return {}}\r\n\r\n\r\nconst FriendsContainer = connect(mapStateToProps, mapDispatchToProps)(Friends);\r\n\r\nexport default FriendsContainer;\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemId) {\r\n            return { ...i, ...newObjProps };\r\n        }\r\n        return i;\r\n    })\r\n}","import { usersAPI } from \"../../api/api\";\r\nimport { updateObjectInArray } from \"../../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'samurai-network/users/FOLLOW';\r\nconst UNFOLLOW = 'samurai-network/users/UNFOLLOW';\r\nconst SET_USERS = 'samurai-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'samurai-network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'samurai-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'samurai-network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'samurai-network/users/TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUser = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (pageNumper) => ({ type: SET_CURRENT_PAGE, pageNumper });\r\nexport const settotalItemsCount = (totalCount) => ({ type: SET_TOTAL_USERS_COUNT, totalCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingInPropress = (isFetching, userId) => ({ type: TOGGLE_FOLLOWING_IN_PROGRESS, isFetching, userId });\r\n\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalItemsCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n  portionSize: 10,\r\n}\r\n\r\nconst usersReduser = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n      }\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n      }\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalItemsCount: action.totalCount\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.pageNumper\r\n      }\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n    case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const requesUsers = (currentPage, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  let data = await usersAPI.getUsers(currentPage, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUser(data.items));\r\n  dispatch(settotalItemsCount(data.totalCount));\r\n}\r\n\r\n\r\nlet followUnfollowFlow = async (userId, dispatch, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingInPropress(true, userId));\r\n  let data = await apiMethod(userId);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingInPropress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n  followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n}\r\n\r\n\r\n\r\nexport default usersReduser;\r\n\r\n","import React, { useState } from 'react';\r\nimport style from './paginator.module.css'\r\n\r\nconst Paginator = (props) => {\r\n   \r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.portionSize;\r\n\r\n\r\n    return (\r\n\r\n        <div className={style.paginatorContainer}>\r\n            {\r\n                portionNumber > 1 && <button onClick={()=>{setPortionNumber(portionNumber - 1)}}>PREV</button>\r\n            }\r\n            {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                return <span key={p.toString()} className={p === props.currentPage ? style.selected : undefined}\r\n                    onClick={(e) => { props.onPageChanged(p) }}>{p}</span>\r\n            })}\r\n            {\r\n                portionNumber < portionCount && <button onClick={()=>{setPortionNumber(portionNumber + 1)}}>NEXT</button>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user.52ab533a.jpg\";","import React from 'react';\r\nimport style from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst User = ({user, followingInProgress, follow, unfollow, ...props }) => {\r\n    return (\r\n        <div>\r\n\r\n            <div className={style.usersContainer} key={user.id}>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small || userPhoto} alt='avatar' className={style.userAvatar}></img>\r\n                    </NavLink>\r\n                </div>\r\n                {\r\n                    user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            unfollow(user.id)\r\n                        }}>follow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            follow(user.id)\r\n                        }} >unfollow</button>\r\n                }\r\n\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n                <div>{\"user.location.city\"}</div>\r\n                <div>{\"user.location.country\"}</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport Paginator from '../common/paginator';\r\nimport User from './User';\r\n\r\n\r\nconst Users = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize, ...props }) => {\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={totalItemsCount} pageSize={pageSize}\r\n                currentPage={currentPage} onPageChanged={onPageChanged} portionSize={portionSize}\r\n            />\r\n            {\r\n                props.users.map(u => <User user={u} key={u.id}\r\n                                followingInProgress={props.followingInProgress}\r\n                                follow={props.follow}\r\n                                unfollow={props.unfollow}\r\n                 />)\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Users","export const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n}\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n}\r\nexport const gettotalItemsCount = (state) => {\r\n  return state.usersPage.totalItemsCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n}\r\nexport const getPortionSize = (state) => {\r\n  return state.usersPage.portionSize;\r\n}\r\n\r\n","import { connect } from 'react-redux';\r\nimport {follow, unfollow, followSuccess, requesUsers, setUser, unfollowSuccess, setCurrentPage, toggleFollowingInPropress } from '../Redux/Users_Reduser';\r\nimport Users from './Users';\r\nimport React from 'react';\r\nimport Preloader from '../common/Preloader';\r\nimport { getUsers, getPageSize, gettotalItemsCount, getCurrentPage, getIsFetching, getFollowingInProgress, getPortionSize } from '../Redux/Users_selectors';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {        \r\n        if (this.props.users.length === 0) {\r\n            this.props.requesUsers(this.props.currentPage, this.props.pageSize);\r\n        }\r\n    }\r\n\r\n        onPageChanged = (pageNumper) => {   \r\n            this.props.setUser([]);\r\n            this.props.setCurrentPage(pageNumper);\r\n            this.props.requesUsers(pageNumper, this.props.pageSize);\r\n        }\r\n\r\n            render() {\r\n                return <>\r\n                    { this.props.isFetching ? <Preloader /> : null}\r\n\r\n                    < Users totalItemsCount={this.props.totalItemsCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        unfollowSuccess={this.props.unfollowSuccess}\r\n                        followSuccess={this.props.followSuccess}\r\n                        isFetching={this.props.isFetching}                        \r\n                        followingInProgress={this.props.followingInProgress}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        portionSize={this.props.portionSize}\r\n                        \r\n\r\n                    />\r\n                </>\r\n            }\r\n        }\r\n\r\n\r\n        const mapStateToProps = (state) => {\r\n            return {\r\n                users: getUsers(state),\r\n                pageSize: getPageSize(state),\r\n                totalItemsCount: gettotalItemsCount(state),\r\n                currentPage: getCurrentPage(state),\r\n                isFetching: getIsFetching(state),\r\n                followingInProgress: getFollowingInProgress(state),\r\n                portionSize: getPortionSize(state),\r\n            }\r\n        }\r\n\r\n        export default connect(mapStateToProps,\r\n            { followSuccess, unfollowSuccess, setUser, setCurrentPage,\r\n                 toggleFollowingInPropress, requesUsers, follow, unfollow })\r\n            (UsersContainer);","import { profileAPI } from \"../../api/api\";\r\n\r\nconst ADD_POST = 'samurai-network/postPage/ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = 'samurai-network/postPage/UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'samurai-network/postPage/SET_USER_PROFILE';\r\nconst SET_STATUS = 'samurai-network/postPage/SET_STATUS';\r\n\r\nexport const addPost = (postText) => ({ type: ADD_POST, postText });\r\nexport const setUserProfile = (userProfile) => ({ type: SET_USER_PROFILE, userProfile: userProfile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: \"Hi, how are you?\" },\r\n    { id: 2, message: \"It is my first post\" }\r\n  ],\r\n  userProfile: null,\r\n  status: \"\",\r\n}\r\n\r\nconst postsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let post = {\r\n        id: parseInt(state.posts[state.posts.length - 1].id + 1),\r\n        message: action.postText\r\n      }\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, post],\r\n      };\r\n\r\n    }\r\n    case UPDATE_NEW_POST_TEXT: {\r\n      return {\r\n        ...state,\r\n        newPostText: action.newText\r\n      };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {\r\n        ...state,\r\n        userProfile: action.userProfile\r\n      }\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.getProfile(userId);\r\n  dispatch(setUserProfile(data));\r\n}\r\n\r\n\r\nexport const requesUserstatus = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let data = await profileAPI.updateStatus(status)\r\n  if (data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n}\r\n\r\nexport default postsReduser;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      <img alt=\"\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_zHnsoD29FF3uZIXlcdhTNGrM7jAEzNuaEg&usqp=CAU\"></img>\r\n        {props.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { InputForm } from '../../common/inputForm';\r\n\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n  let postsElements = props.posts.map(post => <Post message={post.message} key={post.id} />)\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.textArea);\r\n  } \r\n\r\n  return (\r\n    <div className={style.myPosts}>\r\n      <h3>My posts</h3>\r\n      <InputForm onSubmit={addNewPost} />\r\n      <div>\r\n        New post\r\n      </div>\r\n      <div className={style.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPost } from '../../Redux/PostsPage_Reduser';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.postsPage.posts,\r\n    newPostText: state.postsPage.newPostText\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;","export default __webpack_public_path__ + \"static/media/Blue-style.f4a501e4.jpg\";","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n  let [editMod, setEditMod] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activateEditMod = () => {\r\n    setEditMod(true);\r\n  }\r\n  const deactivateEditMod = () => {\r\n    setEditMod(false);\r\n    props.updateStatus(status);  \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { editMod ?\r\n        <div>\r\n        <input onChange={(e)=>{setStatus(e.currentTarget.value)}} autoFocus={true} onBlur={()=>{deactivateEditMod()}} value={status}></input>\r\n      </div>     \r\n        :  <div>\r\n        <span onDoubleClick={()=>{activateEditMod()}}>{props.status ? props.status : \"...\"}</span>\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default ProfileStatus; ","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport Blue_style from '../../../assets/images/Blue-style.jpg';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.userProfile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <img className={style.profile__img} alt=\"\" src={Blue_style}></img>\r\n      <div className={style.profileWrapper}>\r\n        <img src={props.userProfile.photos.small || userPhoto} alt=\"User Avatar\" className={style.userAvatar} />\r\n        <div className={style.item}>{props.userProfile.fullName}</div>\r\n        <ProfileStatusWithHooks status={props.status}\r\n                       updateStatus={props.updateStatus}\r\n         />\r\n        {props.userProfile.lookingForAJob && <div>В поиске работы!</div>}\r\n        <div className={style.contacs}>\r\n            {props.userProfile.contacts === {} && <h3>Список контактов</h3>}\r\n            <ul>\r\n              {props.userProfile.contacts.github && <li><span>github</span>{props.userProfile.contacts.github}</li>}\r\n              {props.userProfile.contacts.vk &&<li><span>vk</span>{props.userProfile.contacts.vk}</li>}\r\n              {props.userProfile.contacts.facebook &&<li><span>facebook</span>{props.userProfile.contacts.facebook}</li>}\r\n              {props.userProfile.contacts.instagram &&<li><span>instagram</span>{props.userProfile.contacts.instagram}</li>}\r\n              {props.userProfile.contacts.twitter &&<li><span>twitter</span>{props.userProfile.contacts.twitter}</li>}\r\n              {props.userProfile.contacts.website &&<li><span>website</span>{props.userProfile.contacts.website}</li>}\r\n              {props.userProfile.contacts.youtube &&<li><span>youtube</span>{props.userProfile.contacts.youtube}</li>}\r\n              {props.userProfile.contacts.mainLink &&<li><span>mainLink</span>{props.userProfile.contacts.mainLink}</li>}\r\n            </ul>\r\n        </div>\r\n          \r\n          \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>      \r\n      <ProfileInfo userProfile={props.userProfile}\r\n                   status={props.status}\r\n                   updateStatus={props.updateStatus}\r\n       />\r\n      <MyPostsContainer />\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, requesUserstatus, updateStatus } from '../Redux/PostsPage_Reduser'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {  \r\n  componentDidMount() {        \r\n    let userId = this.props.match.params.userId === undefined ? this.props.userId : this.props.match.params.userId;\r\n    if(!userId) {\r\n      this.props.history.push('/login')\r\n    }\r\n\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.requesUserstatus(userId);\r\n  }\r\n  \r\n  render() {\r\n    return <Profile {...this.props}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                     />\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  userProfile: state.postsPage.userProfile,\r\n  status: state.postsPage.status,\r\n  userId: state.auth.userId\r\n  \r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile,  requesUserstatus, updateStatus} ),\r\n  withRouter,\r\n)(ProfileContainer);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={style.header}>\r\n            {/* <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQsSfFXzNR5_br9ciiN0CLf8fgm74zWosgwgQ&usqp=CAU\"></img> */}\r\n            <div className={style.login_block}>\r\n                {props.login ? <div>{props.login} <button onClick={props.logout}>Log out</button></div> : <NavLink to={'/login'}>Login</NavLink>}                \r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from '../Redux/Auth_Reduser';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React, { Suspense } from \"react\";\nimport './App.css';\nimport { Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { initializeApp } from './components/Redux/App_Reduser';\nimport NavBar from './components/NavBar/NavBar';\nimport Preloader from './components/common/Preloader';\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\nimport FriendsContainer from './components/SideBar/FriendsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\n\nconst Login = React.lazy(() => import('./components/Login/login'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.isInitialized) {\n      return <Preloader />\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <NavBar />\n        <FriendsContainer />\n        <div className=\"app-wrapper-content\">\n          <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Suspense fallback={<div>загрузка...</div>}>\n            <Route path=\"/login\" render={() => <Login />} />\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isInitialized: state.app.isInitialized\n});\n\nexport default connect(mapStateToProps, { initializeApp })(App);\n","\r\nlet initialState = {  \r\n    friendLink: [\r\n      { \r\n        name: \"Zlata\", \r\n        avatarSrc: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_zHnsoD29FF3uZIXlcdhTNGrM7jAEzNuaEg&usqp=CAU\", \r\n        id: 1\r\n      },\r\n      { \r\n       name: \"Den\",\r\n       avatarSrc: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_zHnsoD29FF3uZIXlcdhTNGrM7jAEzNuaEg&usqp=CAU\",\r\n       id: 2\r\n      },\r\n      { \r\n        name: \"Ivan\",\r\n        avatarSrc: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_zHnsoD29FF3uZIXlcdhTNGrM7jAEzNuaEg&usqp=CAU\",\r\n        id: 3\r\n      }\r\n    ]  \r\n}\r\n\r\nconst sideBarReduser = (state = initialState, action) => {\r\n  return state;\r\n}\r\n\r\nexport default sideBarReduser;","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport authReduser from \"./Auth_Reduser\";\nimport dialogsReduser from \"./DialogsPage_Reduser\";\nimport postsReduser from \"./PostsPage_Reduser\";\nimport sideBarReduser from \"./SideBar_Reduser\";\nimport usersReduser from \"./Users_Reduser\";\nimport ReduxThunk from \"redux-thunk\";\nimport appReduser from \"./App_Reduser\";\n\nlet redusers = combineReducers({\n    dialogsPage: dialogsReduser,\n    postsPage: postsReduser, \n    sideBar: sideBarReduser,\n    usersPage: usersReduser,\n    auth: authReduser,\n    app: appReduser,\n});\n\n// let store = createStore(redusers, applyMiddleware(ReduxThunk));\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(ReduxThunk)));\n\n\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './components/Redux/ReduxStore';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nwindow.state = store.getState();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}